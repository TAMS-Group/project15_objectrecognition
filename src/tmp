	int largest_area=0;
 	int largest_contour_index=0;
 	cv::Rect bounding_rect;
 
 	cv::Mat thr(img.rows, img.cols, CV_8UC3); 
 	cv::Mat dst(img.rows, img.cols, CV_8UC3, cv::Scalar::all(0));
 	cv::cvtColor(img, thr, CV_BGR2GRAY); //Convert to gray
 	cv::threshold(thr, thr,25, 255,cv::THRESH_BINARY); //Threshold the gray
  
    	cv::vector<cv::vector<cv::Point> > contours; // Vector for storing contour
    	cv::vector<cv::Vec4i> hierarchy;
 
    	cv::findContours( thr, contours, hierarchy,CV_RETR_CCOMP, CV_CHAIN_APPROX_SIMPLE ); // Find the contours in the image
   
     	for( int i = 0; i< contours.size(); i++ ) // iterate through each contour. 
      	{
       		double a = contourArea(contours[i],false);  //  Find the area of contour
       		if(a > largest_area){
       			largest_area = a;
       			largest_contour_index = i;                //Store the index of largest contour
       			bounding_rect=boundingRect(contours[i]); // Find the bounding rectangle for biggest contour
       		}
      	}
 
 	cv::Scalar color( 255,255,255);
 	cv::drawContours( dst, contours,largest_contour_index, color, CV_FILLED, 8, hierarchy ); // Draw the largest contour using previously stored index.
 	cv::rectangle(img, bounding_rect,  cv::Scalar(0,255,0),1, 8,0);  


